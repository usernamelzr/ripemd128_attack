#include<bits/stdc++.h>
using namespace std;
unsigned int m[16],x[70],y[70],mm[16],xx[70],yy[70];

unsigned int pr[4][32]={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12},
			   {7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2},
			   {3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13},
			   {1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14}};
unsigned int s[4][32]={{11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6},
			   {7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11},
			   {11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5},
{11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8}};			   
void gety(int i)
{
	y[i+4]=((y[i]+((y[i+1]&y[i+3])^((~y[i+1])&y[i+2]))+m[pr[0][i+16]]+0x50a28be6)<<s[0][i+16])|((y[i]+((y[i+1]&y[i+3])^((~y[i+1])&y[i+2]))+m[pr[0][i+16]]+0x50a28be6)>>(32-s[0][i+16]));
}
void getyy(int i)
{
	yy[i+4]=((yy[i]+((yy[i+1]&yy[i+3])^((~yy[i+1])&yy[i+2]))+mm[pr[0][i+16]]+0x50a28be6)<<s[0][i+16])|((yy[i]+((yy[i+1]&yy[i+3])^((~yy[i+1])&yy[i+2]))+mm[pr[0][i+16]]+0x50a28be6)>>(32-s[0][i+16]));
}
void getx(int i)
{
	x[i+4]=((x[i]+(x[i+1]^x[i+2]^x[i+3])+m[pr[0][i]])<<s[0][i])|((x[i]+(x[i+1]^x[i+2]^x[i+3])+m[pr[0][i]])>>(32-s[0][i]));}
void getxx(int i)
{
	xx[i+4]=((xx[i]+(xx[i+1]^xx[i+2]^xx[i+3])+mm[pr[0][i]])<<s[0][i])|((xx[i]+(xx[i+1]^xx[i+2]^xx[i+3])+mm[pr[0][i]])>>(32-s[0][i]));
}
void getm(int i)
{
	m[pr[0][i+16]]=((y[i+4]>>s[0][i+16])|(y[i+4]<<(32-s[0][i+16])))-y[i]-((y[i+1]&y[i+3])^((~y[i+1])&y[i+2]))-0x50a28be6;
}
void getmx(int i)
{
	m[pr[0][i]]=((x[i+4]>>s[0][i])|(x[i+4]<<(32-s[0][i])))-x[i]-(x[i+1]^x[i+2]^x[i+3]);
}
void pry(int i)
{
		printf("%d %08x %08x %08x %08x %08x %08x %08x %08x\n",i+1,x[i+4],y[i+4],xx[i+4],yy[i+4],x[i+4]^xx[i+4],x[i+4]-xx[i+4],y[i+4]^yy[i+4],y[i+4]-yy[i+4]);
		for(int j=0;j<=31;j++)
		{
			if(((yy[i+4]&(1u<<j))!=0)&&((y[i+4]&(1u<<j))==0))
				printf("+%d ",j+1);
			if(((y[i+4]&(1u<<j))!=0)&&((yy[i+4]&(1u<<j))==0))
				printf("-%d ",j+1);
		}
		cout<<endl;
}		
void prx(int i)
{
	printf("%d %08x %08x %08x %08x %08x %08x %08x %08x\n",i+1,x[i+4],y[i+4],xx[i+4],yy[i+4],x[i+4]^xx[i+4],x[i+4]-xx[i+4],y[i+4]^yy[i+4],y[i+4]-yy[i+4]);
	for(int j=0;j<=31;j++)
	{
		if(((xx[i+4]&(1u<<j))!=0)&&((x[i+4]&(1u<<j))==0))
			printf("+%d ",j+1);
		if(((x[i+4]&(1u<<j))!=0)&&((xx[i+4]&(1u<<j))==0))
			printf("-%d ",j+1);
	}
	cout<<endl;
}
std::mt19937 rnd(time(0));

int main(int argc,char* argv[]) 
{
	x[0]=y[0]=xx[0]=yy[0]=0x67452301;
	x[1]=y[1]=xx[1]=yy[1]=0x10325476;
	x[2]=y[2]=xx[2]=yy[2]=0x98BADCFE;
	x[3]=y[3]=xx[3]=yy[3]=0xEFCDAB89;
	m[0]=0x2d9942f6;
	m[1]=0x8116c0fa;
	m[2]=0xec95290c;
	m[3]=0x0f23a553;
	m[4]=0x2a34e00f;
	m[5]=0x84797a0c;
	m[6]=0x94c87810;
	m[7]=0xb389dfb7;
	m[8]=0xd673ac60;
	m[9]=0xb89cd050;
	m[10]=0xa3cdab33;
	m[11]=0xfd249d61;
	m[12]=0x84c3f581;
	m[13]=0xee28d84c;
	m[14]=0x3bfab38c;
	m[15]=0x045080be;
	for(int i=0;i<16;i++)
		mm[i]=m[i];
	mm[3]+=(1<<21);
	mm[4]+=(1);
	mm[9]-=(1);
	for(int i=0;i<=9;i++)
	{
		getx(i);
		getxx(i);
	}
	for(int i=0;i<=12;i++)
	{
		gety(i);
		getyy(i);
	}
	unsigned sum=0;
	for(unsigned u=0;;u++)
	{
		int can=1;
		m[10]=mm[10]=u;
		getx(10);
		getxx(10);
		getx(11);
		getxx(11);
		gety(13);
		getyy(13);
		gety(14);
		getyy(14);
		if((y[17]&(1<<4)))
			can=0;
		if((y[17]&(1<<21))==0)
			can=0;
		if((y[17]&(1<<9)))
			can=0;
		if((y[17]&(1<<8))==0)
			can=0;	
		if(((y[17]^y[16])&(1<<7)))
			can=0;		
		if((y[18]&(1<<8)))
			can=0;
		if((y[18]&(1<<21))==0)
			can=0;	
		if((y[18]&(1<<13)))
			can=0;
		if((y[18]&(1<<4))==0)
			can=0;	
		if((x[14]&(1<<8)))
			can=0;
		if((x[14]&(1<<1))==0)
			can=0;
		if((x[14]&(1<<18)))
			can=0;
		if((x[14]&(1<<17))==0)
			can=0;	
		if((x[15]&(1<<17)))
			can=0;
		if(((x[15]^x[14])&(1<<25))==0)
			can=0;		
		if(can)
		{
				for(unsigned v=0x7d59daee;;v=(v-1)&0x7d59daee)
				{
					y[19]=v;
					getm(15);
					getx(12);
					if(((x[16]^x[15])&(1<<0))==0)
						x[16]^=(1<<0);
					if(((x[16]^x[15])&(1<<8)))
						x[16]^=(1<<8);	
					getx(13);
					if(((x[17]^x[16])&(1<<17))==0)
						x[16]^=(1<<10);						
					if(((x[16]^x[15])&(1<<18))==0)
						x[16]^=(1<<18);	
					getx(13);
					getx(14);
					if(((x[18]^x[16])&(1<<0)))
						x[16]^=(1<<23);
					getx(13);	
					if((x[17]&(1<<0))==0)
						x[16]^=(1<<25);
					getx(13);
					getx(14);
					if(((x[18]^x[17])&(1<<8)))
						x[16]^=(1u<<31);
					getmx(12);
					mm[12]=m[12];
					for(int i=0;i<46;i++)
					{
						if(i<16)
						{
							x[i+4]=((x[i]+(x[i+1]^x[i+2]^x[i+3])+m[pr[0][i]])<<s[0][i])|((x[i]+(x[i+1]^x[i+2]^x[i+3])+m[pr[0][i]])>>(32-s[0][i]));
							y[i+4]=((y[i]+((y[i+1]&y[i+3])^((~y[i+1])&y[i+2]))+m[pr[0][i+16]]+0x50a28be6)<<s[0][i+16])|((y[i]+((y[i+1]&y[i+3])^((~y[i+1])&y[i+2]))+m[pr[0][i+16]]+0x50a28be6)>>(32-s[0][i+16]));
							xx[i+4]=((xx[i]+(xx[i+1]^xx[i+2]^xx[i+3])+mm[pr[0][i]])<<s[0][i])|((xx[i]+(xx[i+1]^xx[i+2]^xx[i+3])+mm[pr[0][i]])>>(32-s[0][i]));
							yy[i+4]=((yy[i]+((yy[i+1]&yy[i+3])^((~yy[i+1])&yy[i+2]))+mm[pr[0][i+16]]+0x50a28be6)<<s[0][i+16])|((yy[i]+((yy[i+1]&yy[i+3])^((~yy[i+1])&yy[i+2]))+mm[pr[0][i+16]]+0x50a28be6)>>(32-s[0][i+16]));
						}
						else
							if(i<32)
							{
								x[i+4]=((x[i]+((x[i+3]&x[i+2])^((~x[i+3])&x[i+1]))+m[pr[1][i-16]]+0x5a827999)<<s[1][i-16])|((x[i]+((x[i+3]&x[i+2])^((~x[i+3])&x[i+1]))+m[pr[1][i-16]]+0x5a827999)>>(32-s[1][i-16]));
								y[i+4]=((y[i]+(y[i+1]^((~y[i+2])|y[i+3]))+m[pr[1][i]]+0x5c4dd124)<<s[1][i])|((y[i]+(y[i+1]^((~y[i+2])|y[i+3]))+m[pr[1][i]]+0x5c4dd124)>>(32-s[1][i]));
								xx[i+4]=((xx[i]+((xx[i+3]&xx[i+2])^((~xx[i+3])&xx[i+1]))+mm[pr[1][i-16]]+0x5a827999)<<s[1][i-16])|((xx[i]+((xx[i+3]&xx[i+2])^((~xx[i+3])&xx[i+1]))+mm[pr[1][i-16]]+0x5a827999)>>(32-s[1][i-16]));
								yy[i+4]=((yy[i]+(yy[i+1]^((~yy[i+2])|yy[i+3]))+mm[pr[1][i]]+0x5c4dd124)<<s[1][i])|((yy[i]+(yy[i+1]^((~yy[i+2])|yy[i+3]))+mm[pr[1][i]]+0x5c4dd124)>>(32-s[1][i]));
							}
							else
								if(i<48)
								{
									x[i+4]=((x[i]+(x[i+1]^((~x[i+2])|x[i+3]))+m[pr[2][i-32]]+0x6ed9eba1)<<s[2][i-32])|((x[i]+(x[i+1]^((~x[i+2])|x[i+3]))+m[pr[2][i-32]]+0x6ed9eba1)>>(32-s[2][i-32]));
									y[i+4]=((y[i]+((y[i+3]&y[i+2])^((~y[i+3])&y[i+1]))+m[pr[2][i-16]]+0x6d703ef3)<<s[2][i-16])|((y[i]+((y[i+3]&y[i+2])^((~y[i+3])&y[i+1]))+m[pr[2][i-16]]+0x6d703ef3)>>(32-s[2][i-16]));
									xx[i+4]=((xx[i]+(xx[i+1]^((~xx[i+2])|xx[i+3]))+mm[pr[2][i-32]]+0x6ed9eba1)<<s[2][i-32])|((xx[i]+(xx[i+1]^((~xx[i+2])|xx[i+3]))+mm[pr[2][i-32]]+0x6ed9eba1)>>(32-s[2][i-32]));
									yy[i+4]=((yy[i]+((yy[i+3]&yy[i+2])^((~yy[i+3])&yy[i+1]))+mm[pr[2][i-16]]+0x6d703ef3)<<s[2][i-16])|((yy[i]+((yy[i+3]&yy[i+2])^((~yy[i+3])&yy[i+1]))+mm[pr[2][i-16]]+0x6d703ef3)>>(32-s[2][i-16]));
								}
					}
					if((x[49]==xx[49])&&(x[48]==xx[48])&&(x[47]==xx[47])&&(x[46]==xx[46])&&(y[49]==yy[49])&&(y[48]==yy[48])&&(y[47]==yy[47])&&(y[46]==yy[46]))
					{
						for(int i=0;i<=15;i++)
							printf("%d %08x\n",i,m[i]);
						return 0;
					}
					if(v==0)
						break;
				}
			sum++;
		}
		if((int)u==-1)
			break;
	}	
}
